stages:
  - build
  - deploy

.develop_variables: &develop_variables
  MAVEN_GROUP: com.stratebi.pentaho
  MAVEN_REPOSITORY_ID: stratebi-snapshot
  MAVEN_REPOSITORY_URL: https://repo.stratebi.com/repository/stratebi-mvn-snapshot
  MAVEN_OPTS: -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2
  PACKAGE_VERSION_EXTRA: ${CI_COMMIT_REF_SLUG}-SNAPSHOT

.production_variables: &production_variables
  MAVEN_GROUP: com.stratebi.pentaho
  MAVEN_REPOSITORY_ID: stratebi-releases
  MAVEN_REPOSITORY_URL: https://repo.stratebi.com/repository/stratebi-mvn-releases
  MAVEN_OPTS: -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2

.cache_paths:
  - &mvn_cache_path ./.m2/
  - &npm_cache_path ./node_modules/

.ref_patterns:
  - &release_regex /^v\d+\.\d+\.\d+(?:-[\dA-Za-z-.]+)?\+PE\d+(?:\.[\dA-Za-z-]+)?$/

build:develop:
  stage: build
  variables:
    <<: *develop_variables
  before_script:
    - npm install
  script:
    - make build
  artifacts:
    expire_in: 15 mins
    paths:
      - dist/
  cache:
    paths:
      - *mvn_cache_path
      - *npm_cache_path
  except:
    - *release_regex

build:production:
  stage: build
  variables:
    <<: *production_variables
  before_script:
    - npm install
  script:
    - make build
  artifacts:
    expire_in: 1 day
    paths:
      - dist/
  cache:
    paths:
      - *mvn_cache_path
      - *npm_cache_path
  only:
    - *release_regex

deploy:develop:
  stage: deploy
  variables:
    <<: *develop_variables
  script:
    - make deploy
  cache:
    paths:
      - *mvn_cache_path
      - *npm_cache_path
  except:
    - *release_regex

deploy:production:
  stage: deploy
  variables:
    <<: *production_variables
  script:
    - make deploy
  cache:
    paths:
      - *mvn_cache_path
      - *npm_cache_path
  only:
    - *release_regex
